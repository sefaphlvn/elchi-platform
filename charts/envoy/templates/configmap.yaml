{{- if .Values.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-config
  namespace: {{ .Values.global.namespace }}
data:
  envoy.yaml: |
    static_resources:
      listeners:
      - name: listener_0
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 1989
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stream_idle_timeout: 0s
              stat_prefix: ingress_http
              codec_type: AUTO
              route_config:
                name: unified_route
                virtual_hosts:
                - name: backend_services
                  domains: ["*"]
                  routes:
                  {{- range $version := .Values.global.versions }}
                  # gRPC route based on Version and NodeID
                  - match:
                      prefix: "/"
                      headers:
                      - name: "version"
                        exact_match: {{ regexFind "envoy[0-9]+\\.[0-9]+\\.[0-9]+" $version.tag | replace "envoy" "v" }}
                      - name: "nodeid"
                        present_match: true
                    route:
                      cluster: grpc-cluster-{{ $version.tag | replace "." "-" }}
                      hash_policy:
                      - header:
                          header_name: "version"
                        terminal: false
                      - header:
                          header_name: "nodeid"
                        terminal: true
                  # REST route based on Version only
                  - match:
                      prefix: "/"
                      headers:
                      - name: "version"
                        exact_match: {{ regexFind "envoy[0-9]+\\.[0-9]+\\.[0-9]+" $version.tag | replace "envoy" "v" }}
                    route:
                      cluster: rest-cluster-{{ $version.tag | replace "." "-" }}
                  {{- end }}
                  # Route OPTIONS requests to default REST cluster
                  - match:
                      prefix: "/"
                      headers:
                      - name: ":method"
                        exact_match: "OPTIONS"
                    route:
                      cluster: rest-cluster-default
                  # Route to bigbang default if from-elchi: yes header exists
                  - match:
                      prefix: "/"
                      headers:
                      - name: "from-elchi"
                        exact_match: "yes"
                    route:
                      cluster: rest-cluster-default
                  # Route to elchi if no headers present
                  - match:
                      prefix: "/"
                    route:
                      cluster: elchi-cluster
              access_log:
              - name: envoy.access_loggers.stdout
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                  log_format:
                    json_format:
                      start_time: "%START_TIME%"
                      method: "%REQ(:METHOD)%"
                      path: "%REQ(:PATH)%"
                      version: "%REQ(version)%"
                      nodeid: "%REQ(nodeid)%"
                      response_code: "%RESPONSE_CODE%"
                      upstream_cluster: "%UPSTREAM_CLUSTER%"
                      upstream_host: "%UPSTREAM_HOST%"
              http_filters:
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      clusters:
      {{- range $version := .Values.global.versions }}
      # gRPC clusters
      - name: grpc-cluster-{{ $version.tag | replace "." "-" }}
        connect_timeout: 1s
        type: STRICT_DNS
        lb_policy: RING_HASH
        ring_hash_lb_config:
          minimum_ring_size: 32768
          maximum_ring_size: 131072
        load_assignment:
          cluster_name: grpc-cluster-{{ $version.tag | replace "." "-" }}
          endpoints:
          - lb_endpoints:
            {{- $serviceName := printf "bigbang-grpc-%s" ($version.tag | replace "." "-") }}
            {{- range $i, $e := until (int $.Values.global.bigbang.grpcDefaultReplicas) }}
            - endpoint:
                address:
                  socket_address:
                    address: {{ $serviceName }}-{{ $i }}.{{ $serviceName }}.{{ $.Values.global.namespace }}.svc.cluster.local
                    port_value: 8000
            {{- end }}
        typed_extension_protocol_options:
          envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
            "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
            explicit_http_config:
              http2_protocol_options: {}
      # REST clusters
      - name: rest-cluster-{{ $version.tag | replace "." "-" }}
        connect_timeout: 1s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: rest-cluster-{{ $version.tag | replace "." "-" }}
          endpoints:
          - lb_endpoints:
            {{- $serviceName := printf "bigbang-rest-%s" ($version.tag | replace "." "-") }}
            {{- range $i, $e := until (int $.Values.global.bigbang.restDefaultReplicas) }}
            - endpoint:
                address:
                  socket_address:
                    address: {{ $serviceName }}-{{ $i }}.{{ $serviceName }}.{{ $.Values.global.namespace }}.svc.cluster.local
                    port_value: 8000
            {{- end }}
      {{- end }}
      # VarsayÄ±lan REST cluster
      - name: rest-cluster-default
        connect_timeout: 1s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: rest-cluster-default
          endpoints:
          - lb_endpoints:
            {{- range $version := .Values.global.versions }}
            {{- $serviceName := printf "bigbang-rest-%s" ($version.tag | replace "." "-") }}
            {{- range $i, $e := until (int $.Values.global.bigbang.restDefaultReplicas) }}
            - endpoint:
                address:
                  socket_address:
                    address: {{ $serviceName }}-{{ $i }}.{{ $serviceName }}.{{ $.Values.global.namespace }}.svc.cluster.local
                    port_value: 8000
            {{- end }}
            {{- end }}
      # Elchi Frontend cluster
      - name: elchi-cluster
        connect_timeout: 1s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: elchi-cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: elchi.{{ $.Values.global.namespace }}.svc.cluster.local
                    port_value: 80
    admin:
      access_log_path: /tmp/admin_access.log
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 9901
{{- end }} 